import io.mateo.cxf.codegen.wsdl2java.Wsdl2Java

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'checkstyle'
    id "io.mateo.cxf-codegen" version "1.0.1"
}

group = 'ru.info'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web-services'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.postgresql:postgresql:42.5.0'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.1'
    implementation group: 'org.liquibase', name: 'liquibase-core', version: '4.17.2'

    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '4.7.3'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

    implementation 'com.sun.xml.ws:jaxws-rt:2.3.2'
    implementation 'com.sun.xml.ws:rt:2.3.2'
    implementation 'com.sun.xml.ws:jaxws-ri:2.3.2'

    implementation 'javax.jws:javax.jws-api:1.1'

    cxfCodegen "jakarta.xml.ws:jakarta.xml.ws-api:2.3.3"
    cxfCodegen "jakarta.annotation:jakarta.annotation-api:1.3.5"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation group: 'org.mapstruct', name: 'mapstruct', version: '1.5.3.Final'
    implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: '1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("countryinfoserviceXmlGen", Wsdl2Java) {
    toolOptions {
        wsdl.set(file("${projectDir}/src/main/resources/wsdl/countryinfoservice.xml"))
        wsdlLocation.set("classpath:wsdl/countryinfoservice.xml")
        outputDir.set(file("${buildDir}/generated/sources/wsdl"))
        markGenerated.set(false)
        bindingFiles.add("${projectDir}/src/main/resources/wsdl/countryinfoservice.xml")
    }
}

compileJava.dependsOn(countryinfoserviceXmlGen)
